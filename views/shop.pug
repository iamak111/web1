extends layout/base

mixin filer 
    #accordionPanelsStayOpenExample.accordion
        // Category Filter
        .accordion-item
            h2.accordion-header
                button.accordion-button(type='button' data-bs-toggle='collapse' data-bs-target='#panelsStayOpen-collapseOne' aria-expanded='true' aria-controls='panelsStayOpen-collapseOne')
                    | Categorys
            #panelsStayOpen-collapseOne.accordion-collapse.collapse.show
                .accordion-body
                    - let updatedUrl = new URL(url);
                    - updatedUrl.searchParams.get('category');
                    - let params = updatedUrl.searchParams.get('category');
                    - updatedUrl.searchParams.delete('category');
                    - updatedUrl.searchParams.delete('subCategory');
                    - let urlCategory = updatedUrl.toString()
                    - urlCategory = urlCategory.split('?').length <= 1 ? `${urlCategory}?` :`${urlCategory}&`;
                    - urlCategory = new URL(urlCategory);
                    -  urlCategory = urlCategory.href.split(urlCategory.origin)[1]
                    - params = !!params ? params : ""
                    each doc,i in category
                        .form-check
                            - let uParams = params;
                            - const cateCheck = uParams === doc.name ? true :false;
                            - uParams = cateCheck ? "" : doc.name;
                            - console.log(url)
                            input.form-check-input(type='checkbox' value='',checked=cateCheck 
                            onClick=`window.location = '${urlCategory}category=${uParams}';`,id=`cat-check-${i}` )
                            label.form-check-label(for=`cat-check-${i}`)
                                | #{doc.name}
                            - let subUpdatedUrl = new URL(url);
                            - subUpdatedUrl.searchParams.get('subCategory');
                            - let subParams = subUpdatedUrl.searchParams.get('subCategory');
                            - subUpdatedUrl.searchParams.delete('subCategory');
                            - subUpdatedUrl.searchParams.delete('category');
                            - let suburlCategory = subUpdatedUrl.toString()
                            - suburlCategory = suburlCategory.split('?').length <= 1 ? `${suburlCategory}?` :`${suburlCategory}&`;
                            - suburlCategory = new URL(suburlCategory);
                            -  suburlCategory = suburlCategory.href.split(suburlCategory.origin)[1]
                            - subParams = !!subParams ? subParams : ""
                            each docs,j in doc.subCategories
                                .form-check.ms-3.mt-2 
                                    - let subuParams = subParams;
                                    - const subcateCheck = subuParams === docs ? true :false;
                                    - subuParams = subcateCheck ? "" : docs;
                                    input.form-check-input(type='checkbox' value='',checked=subcateCheck && cateCheck ? true : false 
                                    onClick=`window.location = '${suburlCategory}category=${doc.name}&subCategory=${subuParams}';`,id=`sub-cat-check-${i}${j}` )
                                    label.form-check-label(for=`sub-cat-check-${i}${j}`)= docs
        // Price Filter
        .accordion-item
            h2.accordion-header
                button.accordion-button.collapsed(type='button' data-bs-toggle='collapse' data-bs-target='#panelsStayOpen-collapseTwo' aria-expanded='false' aria-controls='panelsStayOpen-collapseTwo') Price

            - let updateUrl = new URL(url);
            - let min = updateUrl.searchParams.get('min')
            - let max = updateUrl.searchParams.get('max')
            - updateUrl.searchParams.delete('min');
            - updateUrl.searchParams.delete('max');
            - let priceCal = updateUrl.toString()
            - priceCal = priceCal.split('?').length <= 1 ? `${priceCal}?` :`${priceCal}&`;
            - priceCal = new URL(priceCal);
            - priceCal = priceCal.href.split(priceCal.origin)[1];
            #panelsStayOpen-collapseTwo.accordion-collapse.collapse
                .accordion-body
                    .row
                        .col-6
                            .mb-3
                                label.form-label(for='minPrice') Min
                                input.form-control.search-width(type='number' id=`minPrice_web` placeholder='Min' value=min)
                        .col-6
                            .mb-3
                                label.form-label(for='maxPrice') Max
                                input.form-control.search-width(type='number' id=`maxPrice_web` placeholder='Max' value=max)
                    a.wishlist-add.d-block.text-center.mt-0.ms-0.p-1(id=`filter_price_web` href='#') Apply Price
            #rmPrice
                script.
                    document.getElementById(`filter_price_web`).addEventListener('click',e=>{
                    e.preventDefault();
                    let newUrl ="#{priceCal}".replace(/&amp;/g, '&');
                    newUrl= new URL(window.location.origin+newUrl)
                    let min = document.getElementById(`minPrice_web`).value;
                    let max = document.getElementById(`maxPrice_web`).value;
                    min = Math.abs(min);
                    max = Math.abs(max);
                    if(min >= max && !!max){
                        return alert('Minimum price should be less then Maximum Price.')
                    }
                    newUrl.searchParams.set("min" ,min ? min : 0);
                    if(max) {
                        newUrl.searchParams.set("max" ,max);
                    }else
                        newUrl.searchParams.delete('max');

                    return location.assign(newUrl);

                    });
                    document.getElementById('rmPrice').remove()
        // Size Filter
        if size.length
            .accordion-item
                h2.accordion-header
                    button.accordion-button.collapsed(type='button' data-bs-toggle='collapse' data-bs-target='#panelsStayOpen-collapseThree' aria-expanded='false' aria-controls='panelsStayOpen-collapseThree')
                        | Size
                - let updatedSizeUrl = new URL(url);
                - let sParams = updatedSizeUrl.searchParams.get('size');
                - updatedSizeUrl.searchParams.delete('size');
                - let urlSize = updatedSizeUrl.toString()
                - urlSize = urlSize.split('?').length <= 1 ? `${urlSize}?` :`${urlSize}&`;
                - urlSize = new URL(urlSize);
                -  urlSize = urlSize.href.split(urlSize.origin)[1]
                - sParams = !!sParams ? sParams : ""
                #panelsStayOpen-collapseThree.accordion-collapse.collapse
                    .accordion-body
                        .d-flex
                            each doc,i in size
                                - let uParams = sParams.split(',');
                                - const reg = new RegExp((doc),"i")
                                - const cateCheck = uParams.some(siz => reg.test(siz)) ? true :false;
                                - const index = uParams.indexOf(doc);
                                - cateCheck ? uParams.splice(index,1) : uParams.push(doc) ;
                                div.ms-2
                                    input.btn-check(type='checkbox' id=`size-${i}` checked=cateCheck  autocomplete='off' onClick=`window.location = '${urlSize}size=${uParams.join(',').replace(/(^,|,$|,,)/g, '')}';`)
                                    label.btn.btn-outline-main-light(for=`size-${i}`)= doc
        // Color Filter
        if color.length
            .accordion-item
                - let updatedColorUrl = new URL(url);
                - let cParams = updatedColorUrl.searchParams.get('color');
                - updatedColorUrl.searchParams.delete('color');
                - let urlColor = updatedColorUrl.toString();
                - urlColor = urlColor.split('?').length <= 1 ? `${urlColor}?` :`${urlColor}&`;
                - urlColor = new URL(urlColor);
                - urlColor = urlColor.href.split(urlColor.origin)[1];
                - cParams = !!cParams ? cParams : "";

                h2.accordion-header
                    button.accordion-button.collapsed(type='button' data-bs-toggle='collapse' data-bs-target='#panelsStayOpen-collapseFour' aria-expanded='false' aria-controls='panelsStayOpen-collapseFour')
                        | Colors
                #panelsStayOpen-collapseFour.accordion-collapse.collapse
                    .accordion-body
                        each doc,i in color
                            - let cdParams = cParams.split(',');
                            - const reg = new RegExp(doc,"i")
                            - const colorCheck = cdParams.some(col => reg.test(col)) ? true :false;
                            - const index = cdParams.indexOf(doc);
                            - colorCheck ? cdParams.splice(index,1) : cdParams.push(doc) ;
                            .form-check
                                input.form-check-input(type='checkbox' checked=colorCheck  value='' id=`color-${i}` onClick=`window.location = '${urlColor}color=${cdParams.join(',').replace(/(^,|,$|,,)/g, '')}';`)
                                label.form-check-label(for=`color-${i}`)
                                    i.bi.bi-circle-fill.me-2(style=`color:${doc};`)
                                    | #{doc}
        // Rating Filter
        .accordion-item
            h2.accordion-header
                button.accordion-button.collapsed(type='button' data-bs-toggle='collapse' data-bs-target='#panelsStayOpen-collapseFive' aria-expanded='false' aria-controls='panelsStayOpen-collapseFive')
                    | Ratings
            #panelsStayOpen-collapseFive.accordion-collapse.collapse
                .accordion-body
                    - let updatedRatingUrl = new URL(url);
                    - let rParams = updatedRatingUrl.searchParams.get('rating');
                    hr
                    h6.mb-2.mt-2 Ratings
                    - updatedRatingUrl.searchParams.delete('rating');
                    - let urlRating = updatedRatingUrl.toString()
                    - urlRating = urlRating.split('?').length <= 1 ? `${urlRating}?` :`${urlRating}&`;
                    - urlRating = new URL(urlRating);
                    - urlRating = urlRating.href.split(urlRating.origin)[1]
                    - rParams = !!rParams ? rParams : "";
                    each doc,i in [1,2,3,4,5]
                        - let rdParams = rParams.split(',');
                        - const val = 5 - doc +1;
                        - const rateCheck = rdParams.includes(val.toString()) ? true :false;
                        - const index = rdParams.indexOf(val.toString());
                        - rateCheck ? rdParams.splice(index,1) : rdParams.push(val) ;
                        .form-check
                            input.form-check-input(type='checkbox' value='' id=`rate-${i}` checked=rateCheck onClick=`window.location = '${urlRating}rating=${rdParams.join(',').replace(/(^,|,$|,,)/g, '')}';`)
                            label.form-check-label(for=`rate-${i}`)
                                .d-flex
                                    each docs in [5,4,3,2,1]
                                        i.bi.main-light(class=docs < doc ? "bi-star" : "bi-star-fill")

block block 
    section.container.position-relative.pt-4
        nav(aria-label='breadcrumb')
            ol.breadcrumb
                li.breadcrumb-item.fs-5
                    a.main-color.bread-c(href='/') Home
                li.breadcrumb-item.active.fs-5(aria-current='page')
                    a.bread-c.text-dark Shop
        // Mobile Filter Offcanvas component
        -url = decodeURIComponent(url)

        .row
            .col-lg-3.display-web
                .bg-white.p-3
                    p.text-secondary.fw-bold Fillter here
                    +filer
            .col-lg-9
                .display-mobile.w-100
                    .d-flex.justify-content-between
                        div
                            <i class="bi bi-funnel-fill border rounded p-2 fs-4 text-secondary " data-bs-toggle="offcanvas" href="#offcanvasExample" role="button" aria-controls="offcanvasExample"></i>
                            <div class="offcanvas offcanvas-start" tabindex="-1" id="offcanvasExample" aria-labelledby="offcanvasExampleLabel">
                                <div class="offcanvas-header">
                                    <h5 class="offcanvas-title" id="offcanvasExampleLabel">Filters</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                                </div>
                                <div class="offcanvas-body">
                                    +filer
                                </div>
                            </div>
                        div
                            - const data1 = new URL(url);
                            - const sortData1 = data1.searchParams.get('sort');
                            select.form-select.w-100.p-1.sort#sort_datax(aria-label='Default select example')
                                each val,key in {'default':"Default",'low':"Low to High",'high':"High to Low"}
                                    if sortData1 === key
                                        option(value=key selected)=val
                                    else
                                        option(value=key )=val
                            #sort_product_datax
                                script.
                                    document.getElementById('sort_datax').addEventListener('change',e=>{
                                        e.preventDefault();
                                        let updatedUrl = new URL(window.location.href);
                                        updatedUrl.searchParams.set('sort', e.target.value)
                                        return location.assign(updatedUrl)
                                    })
                                    document.getElementById('sort_product_datax').remove()
                .d-flex.justify-content-end
                    .display-web
                        - const data = new URL(url);
                        - const sortData = data.searchParams.get('sort');
                        select.form-select.w-100.p-1.sort#sort_data(aria-label='Default select example')
                            each val,key in {'default':"Default",'low':"Low to High",'high':"High to Low"}
                                if sortData === key
                                    option(value=key selected)=val
                                else
                                    option(value=key )=val
                        #sort_product_data
                            script.
                                document.getElementById('sort_data').addEventListener('change',e=>{
                                    e.preventDefault();
                                    let updatedUrl = new URL(window.location.href);
                                    updatedUrl.searchParams.set('sort', e.target.value)
                                    return location.assign(updatedUrl)
                                })
                                document.getElementById('sort_product_data').remove()
                if docs.length
                    .row.row-cols-2.row-cols-md-4.g-4.mt-3
                        each doc in docs
                            .col
                                .card.h-100.border-0
                                    div(style=" position: relative; text-align: center;")
                                        if doc.discountPrice
                                            p.batch #{Math.floor(((doc.price-doc.discountPrice)/doc.price)*100)}%
                                        if !doc.active
                                            div(style="position: absolute;top: 50%;left: 50%;transform: translate(-50%, -50%);width:70%;")
                                                p.p-1.bg-white.opacity-75.fw-bold Out of Stock

                                        a(href=`/shop/product/${doc.slug}`)
                                            img.card-img-top(src=doc.bannerImage alt='product name')
                                    .card-body
                                        a(href=`/shop/product/${doc.slug}`)
                                            p.card-text.light-black.text-center.two-line.m-0.p-0.mt-1.mb-2=doc.name
                                        .d-flex.justify-content-center
                                            each rat in [1,2,3,4,5]
                                                i.bi.bi-star-fill.me-1(class=rat <= doc.ratingsAverage ? "text-warning" : "text-secondary")
                                            p.text-gray.fs-small.mt-05 (#{doc.ratingsQuantity})
                                        .d-flex.justify-content-center
                                            if doc.discountPrice
                                                p.text-secondary.text-decoration-line-through.m-0.p-0.me-2.fs-5
                                                    | $#{doc.price}
                                                p.text-dark.fw-bold.m-0.p-0.me-2.fs-5 $#{doc.discountPrice}
                                            else 
                                                p.text-dark.fw-bold.m-0.p-0.me-2.fs-5 $#{doc.price  }

                                        .d-flex.justify-content-center
                                            a.p-2.text-uppercase.rounded-1.mt-2.ps-3.pe-3.fs-small.text-white.btn-main.align-items-center.add_to_carts(href='#' data-id=doc.ecmpeId) Add to cart
                else if !docs.length && search
                    .text-center
                        img.w-50.m-auto.text-center(src='/Assets/Images/404.jpg' alt='mouse corsair')
                    p.text-center.m-2.text-lead.h4.fw-bold This product is currently not available or Search not found.
                // pagination Section
                if docs.length
                    nav.mt-5(aria-label='Page navigation example')
                        ul.pagination.justify-content-center
                            li.page-item
                                a.page-link.pagination_manage(type="button" aria-label='Previous' data-type="pre")
                                    span(aria-hidden='true') &laquo;
                            li.page-item
                                - const datas = new URL(url);
                                - let num = datas.searchParams.get('page');
                                - num = !!num*1?num : 1;
                                a.page-link.active#page_no.bg-warning()=num 
                            li.page-item
                                button.page-link.pagination_manage(type="button" aria-label='Next' disabled=docs.length ? false : true class=docs.length ? "" :"bg-light" data-type="next")
                                    span(aria-hidden='true' ) &raquo;